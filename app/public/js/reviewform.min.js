webpackJsonp([0],[
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _reviewform = __webpack_require__(1);

	var _reviewform2 = _interopRequireDefault(_reviewform);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// global __data
	var ReviewForm = React.createFactory(_reviewform2.default);
	ReactDOM.render(ReviewForm(__data), document.getElementById('reviews-mount'));

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _auth = __webpack_require__(3);

	var _auth2 = _interopRequireDefault(_auth);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	var ReviewForm = _react2.default.createClass({
	  displayName: 'ReviewForm',
	  getInitialState: function getInitialState() {
	    return {
	      newReview: {
	        title: '',
	        owner_id: '',
	        restaurant_id: this.props.restaurant_id,
	        body: '',
	        stars: ''
	      }
	    };
	  },
	  getCurrentUser: function getCurrentUser() {
	    return _auth2.default.getCurrentUser();
	  },
	  handleSubmit: function handleSubmit(e) {
	    e.preventDefault();
	    console.log(this.state.newReview);
	  },
	  handleChange: function handleChange(e) {
	    var updatedState = this.state.newReview[e.target.name];
	    updatedState = e.target.value;
	    console.log(updatedState);
	    this.setState(updatedState);
	  },
	  render: function render() {
	    return _react2.default.createElement(
	      'section',
	      { id: 'restaurantform-mount' },
	      _react2.default.createElement(
	        'form',
	        { onSubmit: this.handleSubmit },
	        _react2.default.createElement(
	          'h4',
	          null,
	          'Add Review'
	        ),
	        _react2.default.createElement(
	          'fieldset',
	          { className: 'form-inline' },
	          _react2.default.createElement(
	            'label',
	            { htmlFor: 'title', hidden: true },
	            'Title:'
	          ),
	          _react2.default.createElement('input', { name: 'title', type: 'text', value: this.state.newReview.title, placeholder: 'Title', onChange: this.handleChange, className: 'form-control', required: true }),
	          _react2.default.createElement(
	            'label',
	            { htmlFor: 'stars', className: 'ml' },
	            'Rating:'
	          ),
	          _react2.default.createElement(
	            'select',
	            _defineProperty({ className: 'form-control', name: 'stars', selected: '1', value: this.state.newReview.stars, placeholder: 'Stars', onChange: this.handleChange }, 'className', 'form-control'),
	            _react2.default.createElement(
	              'option',
	              null,
	              '1'
	            ),
	            _react2.default.createElement(
	              'option',
	              null,
	              '2'
	            ),
	            _react2.default.createElement(
	              'option',
	              null,
	              '3'
	            ),
	            _react2.default.createElement(
	              'option',
	              null,
	              '4'
	            ),
	            _react2.default.createElement(
	              'option',
	              null,
	              '5'
	            )
	          )
	        ),
	        _react2.default.createElement(
	          'fieldset',
	          { className: 'form-group' },
	          _react2.default.createElement(
	            'label',
	            { htmlFor: 'message', hidden: true },
	            'Message'
	          ),
	          _react2.default.createElement('textarea', { name: 'Message', placeholder: 'Message', onChange: this.handleChange, className: 'form-control', rows: '3', value: this.state.newReview.body, required: true })
	        ),
	        _react2.default.createElement('input', { name: 'submit', type: 'submit', className: 'btn btn-primary btn-block' })
	      )
	    );
	  }
	});

	exports.default = ReviewForm;

/***/ }
]);